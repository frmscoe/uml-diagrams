@startuml
start
:Accept http POST request from CRSP;
 note right
            Data from CRSP:
            * Pacs 002 transaction
            * network sub-map
        end note
:Read rule config from config DB;
 note right
             Required Parameter:
            * Rule ID
            * Rule CFG
        end note
if (Rule config is found & Rule config is valid) then (yes)
  if (Historical transactions are found) then (yes)
   if (the debtor vertex linked to the pacs.008 transaction edge) then (yes)
   else (no)
   : Return ruleResult as false;
    note right
            ruleResult:
            * "id": "007@1.0.0",
            * "cfg": "1.0.0",
            * "subRuleRef": ".00",
            * "result": false,
            * "reason": "Insufficient transaction history"
        end note
   stop
   
  endif
  if (The creditor in the current transaction has successfully received any payments) then (yes)
   else (no)
   : Return ruleResult as false;
   note right
            ruleResult:
            * "id": "007@1.0.0",
            * "cfg": "1.0.0",
            * "subRuleRef": ".00",
            * "result": false,
            * "reason": "Unsuccessful Transaction"
        end note
   stop
  endif
  if (the debtor vertex linked to the pacs.008 transaction edge of the second-most recent transaction) then (yes)
   else (no)
   : Return ruleResult as false;
   note right
            ruleResult:
            * "id": "007@1.0.0",
            * "cfg": "1.0.0",
            * "subRuleRef": ".00",
            * "result": false,
            * "reason": "Insufficient transaction history"
        end note
   stop
  endif
   
  :Read the transaction descriptions from the historical and incoming pain.001 record from the equivalent most recent and successful transaction and perform a Levenshtein distance calculation
   : determine rule result;
  else (no)
   : Return ruleResult as false;
   stop
  endif
else (no)
  : Return ruleResult as false and Log the error;
  stop
endif
:Submit rule result to the typology processor;
note right
    Rule output payload includes:
    * Rule Result
    * Network sub-map
    * Original transaction data;
end note
stop
@enduml
